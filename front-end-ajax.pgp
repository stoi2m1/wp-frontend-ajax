<?php
/**
 * Front End Ajax 
 *
 * My Atempt at an ajax front end for wordpress
 * and standardizing the naming conventions for wp_nonce and ajax actions
 * * 
 * * Lightweight frontend ajax alternative to admin-ajax.php
 * * Modified from admin-ajax.php @ v4.4.1
 * 
 * * origional author Michael Niles <codepad@blindmikey.com>
 *
 * @author  Jesse Smith <stoi2m1@byahoo.com>
 * @version 1.0.0
 *
 * use the following in wp_nonce_field and this script will validate nonce
 * then define you add actions based on the following and your ready to roll
 *
 * nonce action 			- {prefix}_{action}_nonce
 * nonce name 				- _{prefix}_{action}_nonce
 * action hook with priv 	- {prefix}_ajax_{action}
 * action hook no priv		- {prefix}_ajax_nopriv_{action}
 *
 * {prefix} will be replaced with defined $prefix below
 * {action} will be replaced with $_REQUEST['action'] 
 *
 * see http://thehostwiz.com/??? for an example and an explination
 *
 */


/** CHANGE THIS PREFIX TO SOMETHING UNIQUE LIKE YOUR INITIALS */
$prefix = 'thw'; // The Host Wiz


/** Executing AJAX process. */
define( 'DOING_AJAX', true );


/*
 * Optionally get even more lightweight and require only 
 * what you need after wp-load.php
 *
 * https://core.trac.wordpress.org/browser/branches/3.4/wp-settings.php#L99
 */
// define('SHORTINIT', true);


/** 
 * Load WordPress Bootstrap
 * assumes this file (frontend-ajax.php) is in theme root. Adjust as needed
 */
//require_once( '../../../wp-load.php' );
require_once( 'wp-load.php' );
// if SHORTINIT add your require_once()'s here


/** Allow for cross-domain requests (from the frontend). */
send_origin_headers();


$action = $_REQUEST['action'];


/** Require an action parameter */
if ( empty( $action ) )
	die( '0' );


/** verify the action nonce */
if ( ! wp_verify_nonce( $_REQUEST[$prefix.'_'.$action.'_nonce'], '_'.$prefix.'_'.$action.'_nonce') )
	die( '0' );


/** Setup headers */
@header( 'Content-Type: text/html; charset=' . get_option( 'blog_charset' ) );
@header( 'X-Robots-Tag: noindex' );


/** Send a HTTP header to disable content type sniffing in browsers which support it. */
send_nosniff_header();
/** Set headers to prevent caching for browsers. */
nocache_headers();


/**
 * Optionally allow only specific actions 
 */
/*
$approved_actions = array(
    'action_one',
    'action_two',
);

if( ! in_array( esc_attr( trim( $_REQUEST['action'] ) ), $approved_actions ) )
    die( '0' );
*/


/** Register Ajax calls. */
if ( is_user_logged_in() ) {
	do_action( $prefix . '_ajax_' . $action );
} else {
	do_action( $prefix . '_ajax_nopriv_' . $action );
}

/** Default status */
die( '0' );
